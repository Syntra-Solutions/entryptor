# Build Steps Template
# Build Entryptor macOS application

parameters:
- name: pythonVersion
  type: string
  default: '3.11'
- name: platform
  type: string
  default: 'macOS'
- name: artifactName
  type: string
  default: 'entryptor-macos'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '${{ parameters.pythonVersion }}'
  displayName: 'Use Python ${{ parameters.pythonVersion }}'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install pyinstaller
  displayName: 'Install dependencies and PyInstaller'

# macOS Build
- script: |
    pyinstaller --clean --noconfirm \
      --name Entryptor \
      --windowed \
      --onedir \
      --add-data "src:src" \
      --hidden-import PyQt6.QtCore \
      --hidden-import PyQt6.QtGui \
      --hidden-import PyQt6.QtWidgets \
      --hidden-import cryptography \
      src/main.py
  displayName: 'Build macOS Application'

# Create distribution directory
- script: |
    mkdir -p dist-artifacts
    cp -r dist/* dist-artifacts/ 2>/dev/null || :
    cp README.md dist-artifacts/ 2>/dev/null || :
    cp HELP.md dist-artifacts/ 2>/dev/null || :
    cp LICENSE dist-artifacts/ 2>/dev/null || :
  displayName: 'Prepare macOS Distribution'

# Test the built application
- script: |
    ls -la dist-artifacts/
    file dist-artifacts/Entryptor.app/Contents/MacOS/Entryptor 2>/dev/null || \
    file dist-artifacts/Entryptor/Entryptor 2>/dev/null || \
    echo "Binary not found, listing contents:"
    find dist-artifacts/ -type f -name "Entryptor" -o -name "Entryptor.app" | head -5
  displayName: 'Verify macOS Build Output'

# Publish build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'dist-artifacts'
    artifactName: '${{ parameters.artifactName }}'
    publishLocation: 'Container'
  displayName: 'Publish macOS Build Artifacts'
